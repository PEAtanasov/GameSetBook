@model AllReviewsSortingServiceModel
@inject IClubService clubservice;

@{
    ViewBag.Title = "All Reviews";
    bool isTheClubOwner = await clubservice.IsTheOwnerOfTheClubAsync(Model.ClubId, User.Id());

    var previousPage = Model.CurrentPage - 1;
    if (previousPage < 1)
    {
        previousPage = 1;
    }
    var maxPage = Math.Ceiling((double)Model.TotalReviewCount / Model.ReviewsPerPage);
}

@await Component.InvokeAsync(nameof(ClubOwnerMenuComponent))

<h2 class="text-center">@ViewBag.Title</h2>

<div class="container">
    <div class="row">
        <div class="col-md-3">
            <div class="left-column">
                <partial name="_ClubInfoPartial" model="Model.ClubInfo" />
                @if (!isTheClubOwner)
                {
                    <a asp-controller="Club" asp-action="Schedule" asp-route-id="@Model.ClubId" class="btn btn-primary mb-2 w-100 p-3 fw-bold">Book Now</a>
                }
            </div>
        </div>
        <div class="col-md-9">
            <div class="container col-sm-12 mb-4">
                <form id="filterForm" asp-controller="Review" asp-action="AllReviews" method="get" class="row g-3 align-items-end">
                    <input type="hidden" asp-for="ClubId" />
                    <input type="hidden" asp-for="CurrentPage" />
                    <div class="col-md-3">
                        <label class="form-label">Sort By</label>
                        <select asp-for="ReviewSorting" class="form-select">
                            <option value="">All</option>
                            <option value="1">Date (Latest -> Earliest)</option>
                            <option value="2">Date (Earliest -> Latest)</option>
                            <option value="3">Rating (Low -> High)</option>
                            <option value="4">Rating (High -> Low)</option>
                        </select>
                    </div>
                    <div class="col-md-3">
                        <label class="form-label">Reviews Per Page</label>
                        <select asp-for="ReviewsPerPage" class="form-select">
                            <option value="5">5</option>
                            <option value="10">10</option>
                            <option value="20">20</option>
                            <option value="50">50</option>
                            <option value="100">100</option>
                        </select>
                    </div>
                    <div class="col-md-3">
                        <button type="submit" class="btn btn-primary w-100">Apply</button>
                    </div>
                    <div class="col-md-3">
                        <a asp-area="" Asp-controller="Review" asp-action="AllReviews" asp-route-clubId="@Model.ClubId" class="btn btn-secondary w-100">Back to full list</a>
                    </div>
                </form>
            </div>
            @if (Model.Reviews.Any())
            {
                foreach (var review in Model.Reviews)
                {
                    <partial name="_ReviewDetailsPartial" model="@review" />
                }
                <div class="d-flex justify-content-center mt-4">
                    <nav>
                        <ul class="pagination">
                            <li class="page-item @(Model.CurrentPage == 1 ? "disabled" : string.Empty)">
                                <a class="page-link"
                                   asp-controller="Review"
                                   asp-action="AllReviews"
                                   asp-route-reviewSorting="@((int)Model.ReviewSorting)"
                                   asp-route-currentPage="@previousPage"
                                   asp-route-reviewsPerPage="@Model.ReviewsPerPage"
                                   asp-route-clubId="@Model.ClubId">Previous</a>
                            </li>
                            @for (int i = 1; i <= maxPage; i++)
                            {
                                <li class="page-item @(Model.CurrentPage == i ? "active" : string.Empty)">
                                    <a class="page-link"
                                       asp-controller="Review"
                                       asp-action="AllReviews"
                                       asp-route-reviewSorting="@((int)Model.ReviewSorting)"
                                       asp-route-currentPage="@i"
                                       asp-route-reviewsPerPage="@Model.ReviewsPerPage"
                                       asp-route-clubId="@Model.ClubId">
                                        @i
                                    </a>
                                </li>
                            }
                            @{
                                var shouldButtonBeDisabled = Model.CurrentPage == maxPage ||
                                !Model.Reviews.Any();
                            }
                            <li class="page-item @(shouldButtonBeDisabled ? "disabled" : string.Empty)">
                                <a class="page-link"
                                   asp-controller="Review"
                                   asp-action="AllReviews"
                                   asp-route-reviewSorting="@((int)Model.ReviewSorting)"
                                   asp-route-currentPage="@(Model.CurrentPage+1)"
                                   asp-route-reviewsPerPage="@Model.ReviewsPerPage"
                                   asp-route-clubId="@Model.ClubId">Next</a>
                            </li>
                        </ul>
                    </nav>
                </div>
            }
            else
            {
                <h4 class="text-center pb-3">The Club Has No Reviews</h4>
            }
        </div>
    </div>
</div>



